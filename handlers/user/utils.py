from time import strftime

from create_bot import bot
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import InputFile
from handlers.user.utils import *
from outline.keys import add_key_to_srv, delete_key
from db.access_keys import *
import logging
from Exceptions.Exceptions import *
from keyboards.keyboards import get_servers_kb, get_keys_by_user_kb, get_extend_period_kb
from config import SERVERS, SUPPORT_BOT_USERNAME

logging.basicConfig(filename="main.log", level=logging.DEBUG, filemode="w",
                    format="%(asctime)s %(levelname)s %(message)s")
log = logging.getLogger("main")


async def send_instructions(chat_id):
    log.info('send_instructions')
    file = InputFile("content/manual.png")
    await bot.send_photo(photo=file, caption='–®–∞–≥ 1: –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n'
                                '<a href="https://play.google.com/store/apps/details?id=org.outline.android.client">Android</a> | '
                                '<a href="https://itunes.apple.com/app/outline-app/id1356177741">iPhone</a> | '
                                '<a href="https://s3.amazonaws.com/outline-releases/client/windows/stable/Outline-Client.exe">Windows</a> | '
                                '<a href="https://s3.amazonaws.com/outline-releases/client/linux/stable/Outline-Client.AppImage">Linux</a> | '
                                '<a href="https://itunes.apple.com/app/outline-app/id1356178125">macOS</a>\n'
                                '–®–∞–≥ 2: –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å ss:// –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n'
                                '–®–∞–≥ 3: –ü–æ–¥–∫–ª—é—á–∞–π—Ç–µ—Å—å –∏ –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å\n'
                                '<b>–í–ê–ñ–ù–û:</b>\n'
                                'üîë –û–¥–Ω–∏–º –∫–ª—é—á–æ–º –º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö.\n'
                                'üö´ –ù–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å—Å—è –∫–ª—é—á–æ–º —Å –¥—Ä—É–≥–∏–º–∏ –ª—é–¥—å–º–∏. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –∫–ª—é—á –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω\n'
                                , chat_id=chat_id, parse_mode='HTML')


async def send_active_keys_by_user(chat_id):
    log.info('send_active_keys_by_user')
    keys = get_keys_by_user(chat_id=chat_id, is_active=True)
    if bool(keys.first()):
        await bot.send_message(text=f'–í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª—é—á–∏ –¥–æ—Å—Ç—É–ø–∞:', chat_id=chat_id, parse_mode='HTML')
        for key in keys:
            key_type = '–ü—Ä–æ–±–Ω—ã–π' if key.is_trial else '–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π'
            due = key.expired.strftime('%d.%m.%Y') if key.expired else '‚ôæ'
            await bot.send_message(text=f'<code>{key.access_url}</code> | –ö–ª—é—á ‚Ññ{key.id} | {key_type} | –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è {due}', chat_id=chat_id, parse_mode='HTML')
    else:
        await bot.send_message(text=f'–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª—é—á–µ–π –¥–æ—Å—Ç—É–ø–∞, –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –∏–ª–∏ '
                                    f'–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø—Ä–æ–±–Ω—ã–º –ø–µ—Ä–∏–æ–¥–æ–º', chat_id=chat_id, parse_mode='HTML')


async def get_keys(message: types.Message):
    await send_instructions(chat_id=message.from_user.id)


async def add_new_key(name, chat_id, server_name, expired, is_trial=False):
    log.info('add_new_key')
    access_key = await add_key_to_srv(name=name)
    try:
        key_id = add_key_to_db(chat_id=chat_id, access_key=access_key, is_trial=is_trial,
                      server_name=server_name, expired=expired)
        return key_id
    except Exception as e:
        log.error(e)
        log.error('Cause ERROR with addind key to db, DELETE key from server')
        await delete_key(access_key.get('id'))
        log.error('Key deleted from server')
        raise e


async def send_error_msg(chat_id):
    log.info('send_error_msg')
    await bot.send_message(text=f'<b>–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É {SUPPORT_BOT_USERNAME}</b>',
                           chat_id=chat_id, parse_mode='HTML')


async def send_rules(chat_id):
    file = InputFile("content/rules.png")
    await bot.send_photo(photo=file, caption='üîë –û–¥–Ω–∏–º –∫–ª—é—á–æ–º –º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö.\n'
                                             'üö´ –ù–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å—Å—è –∫–ª—é—á–æ–º —Å –¥—Ä—É–≥–∏–º–∏ –ª—é–¥—å–º–∏. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –∫–ª—é—á –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω\n'
                                             '–í–æ—Ç –∏ –≤—Å—ë!', chat_id=chat_id, parse_mode='HTML')


async def send_servers_and_rates(chat_id):
    file = InputFile("content/servers.png")
    await bot.send_photo(photo=file, caption= '<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ VPN –∫–ª—é—á–∞ –∏ —Ç–∞—Ä–∏—Ñ</b>\n'
                                              '–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:\n'
                                              '‚Äî –†–æ—Å—Å–∏–π—Å–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã, –µ—Å–ª–∏ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –†–§ –∏ –≤–∞–º –Ω—É–∂–µ–Ω –¥–æ—Å—Ç—É–ø –∫ —Ä–æ—Å—Å–∏–π—Å–∫–∏–º —Ä–µ—Å—É—Ä—Å–∞–º\n'
                                              '‚Äî –ó–∞—Ä—É–±–µ–∂–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã, –µ—Å–ª–∏ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –†–§ –∏ –≤–∞–º –Ω—É–∂–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –∑–∞—Ä—É–±–µ–∂–Ω—ã–º —Ä–µ—Å—É—Ä—Å–∞–º\n'
                                              '–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤',
                         chat_id=chat_id, parse_mode='HTML', reply_markup=get_servers_kb())


async def send_rates(chat_id, key_id):
    file = InputFile("content/rates.png")
    key = get_key_by_id(key_id=key_id)
    srv = await get_server_by_name(key.server_name)
    await bot.send_photo(photo=file, caption='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è',
                         chat_id=chat_id, parse_mode='HTML', reply_markup=get_extend_period_kb(key=key, srv=srv))


async def send_extend_or_new_key(chat_id):
    file = InputFile("content/subscribe.png")
    await bot.send_photo(photo=file, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª—é—á, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å, –∏–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –Ω–æ–≤—ã–π\n'
                                             '<i>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å –ø—Ä–æ–±–Ω—ã–π –∫–ª—é—á. –ï—Å–ª–∏ –æ–Ω –∏—Å—Ç–µ–∫ - –Ω—É–∂–Ω–æ –≤—ã–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤—ã–π, –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π</i>',
                         chat_id=chat_id, parse_mode='HTML', reply_markup=get_keys_by_user_kb(chat_id=chat_id))


async def get_server_by_name(srv_name):
    for srv in SERVERS:
        if srv.get('name') == srv_name:
            return srv
    return None


async def get_price_by_period(srv, period):
    for price in srv.get('price'):
        if price.get('id') == int(period):
            return price
    return None